var dataObj='';
var colors = ['#16a085', '#27ae60', '#2c3e50', '#f39c12', '#e74c3c', '#9b59b6', '#FB6964', '#342224', "#472E32", "#BDBB99", "#77B1A9", "#73A857"];
class App extends React.Component{
  constructor(props){
    super(props);
    this.state={
      Allquotes:{},
      quoteData:{author:'Iam me',quote:'I a a quote'}
    }
    this.handleClick=this.handleClick.bind(this);
  }  
  getRanQuote(){
    return this.state.Allquotes.quotes[Math.floor(Math.random()*this.state.Allquotes.quotes.length)]
  }
 
  handleClick(){
    this.setState({
      quoteData:this.getRanQuote()
    });
     $('#tweet-quote').attr('href', 'https://twitter.com/intent/tweet?hashtags=quotes&related=freecodecamp&text=' + encodeURIComponent('"' + this.state.quoteData.quote + '" ' + this.state.quoteData.author));

    $('#tumblr-quote').attr('href', 'https://www.tumblr.com/widgets/share/tool?posttype=quote&tags=quotes,freecodecamp&caption='+encodeURIComponent(this.state.quoteData.quote)+'&content=' + encodeURIComponent(this.state.quoteData.author)+'&canonicalUrl=https%3A%2F%2Fwww.tumblr.com%2Fbuttons&shareSource=tumblr_share_button');
  
  $(".quote-text").animate(
    { opacity: 0 },
    500,
    function() {
      $(this).animate({ opacity: 1}, 500);
     // $('#text').text(randomQuote.quote);
    }
  );

  $(".quote-author").animate(
    { opacity: 0 },
    500,
    function() {
      $(this).animate({ opacity: 1}, 500);
      //$('#author').html(randomQuote.author);
    }
  );

  var color = Math.floor(Math.random() * colors.length);
  $("html body").animate(
    {
      backgroundColor: colors[color],
      color: colors[color]
    },
    1000
  );
  $(".button").animate(
    {
      backgroundColor: colors[color]
    },
    1000
  );
  }


  
 async componentDidMount(){
var res = await fetch('https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json');
 var data = await res.json();
    this.setState({
      Allquotes:data
    });
   if(this.getRanQuote()){
     this.setState({
       quoteData:this.getRanQuote()
     });
   }
  // console.log(this.state.quoteData);
    console.log(this.state.Allquotes);
  }
  
  componentWillUnmount(){
    this.setState({
      Allquotes:{},
      quoteData:{}
    });
  }
  render(){
    return (
      <div id="wrapper">
        <div id="quote-box">
          <div className="quote-text">
            <i className="fa fa-quote-left"> </i>
            <span id="text"> {this.state.quoteData.quote} </span>
          </div>
          <div className="quote-author">
            - <span id="author">{this.state.quoteData.author}</span>
          </div>
          <div className="buttons">
            <a className="button" id="tweet-quote" title="Tweet this quote!" target="_blank">
              <i className="fa fa-twitter"></i>
            </a>
            <a className="button" id="tumblr-quote" title="Post this quote on tumblr!" target="_blank">
              <i className="fa fa-tumblr"></i>
            </a>
            <button className="button" id="new-quote" onClick={this.handleClick}>New quote</button>
          </div>
        </div>
      </div>
    );
  }
  
}

ReactDOM.render(<App />, document.getElementById('app'));